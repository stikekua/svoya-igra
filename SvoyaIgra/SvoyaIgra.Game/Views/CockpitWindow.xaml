<Window x:Class="SvoyaIgra.Game.CockpitWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:SvoyaIgra.Game"
        xmlns:mtd ="clr-namespace:System.Reflection;assembly=System.Reflection.Metadata"
        xmlns:gf="clr-namespace:SvoyaIgra.Game.Views.GamePhases"
        xmlns:questions="clr-namespace:SvoyaIgra.Game.Views.Questions"        
        xmlns:viewModels="clr-namespace:SvoyaIgra.Game.ViewModels"
        xmlns:sharedEntities="clr-namespace:SvoyaIgra.Shared.Entities;assembly=SvoyaIgra.Shared"        
        xmlns:helpers="clr-namespace:SvoyaIgra.Game.ViewModels.Helpers"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:enums="clr-namespace:SvoyaIgra.Game.Enums"
        mc:Ignorable="d"
        Title="CockpitWindow" 
        Height="1000"         
        Width="1500"
        WindowStyle="SingleBorderWindow" 
        DataContext="{Binding Source={StaticResource Locator}, Path=GameViewModel}">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding CloseAppCommand}"  />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>

        <Style TargetType="Button" x:Key="WindowButtons" >
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="FontFamily" Value="Microsoft YaHei Light"/>
            <Setter Property="Margin" Value="10,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="3" 
                                BorderBrush="Black" 
                                BorderThickness="1" 
                                Background="#FF7596ED">
                                <TextBlock  Text="{TemplateBinding Content}" 
                                            FontSize="15" 
                                            TextWrapping="Wrap"
                                            Foreground="Black"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Padding="10"
                                            />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="CheckBox" x:Key="CheckBoxWindow">
            <Setter Property="VerticalAlignment" Value="Center"/>            
        </Style>
        <Style TargetType="TextBlock" x:Key="DefaultTextBlock">
            <Setter Property="FontFamily" Value="Microsoft YaHei Light"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <helpers:VisibilityParameterConverter x:Key="visibilityParameterConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="1.2*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" x:Name="ThisWindowPanelGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">

                <GroupBox Header="1. Questions" >
                    <Button Content="Open Questions setup" 
                            Command="{Binding OpenQuestionsSetupWindowCommand}" 
                            Style="{StaticResource WindowButtons}"/>
                </GroupBox>

                <GroupBox Header="2. Playscreen" Margin="10 0 0 0">
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Open" 
                        Command="{Binding OpenPresentScreenCommand}"
                        Style="{StaticResource WindowButtons}">
                            <Button.Resources>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PlayScreenRunning}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding PlayScreenRunning}" Value="False">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Resources>
                        </Button>
                        <Button Content="Close" 
                            Style="{StaticResource WindowButtons}"
                            Command="{Binding ClosePresentScreenCommand}"
                            IsEnabled="{Binding PlayScreenRunning}"/>

                        <Border CornerRadius="3" 
                        BorderThickness="1" 
                        BorderBrush="Black"
                        VerticalAlignment="Center"
                        Height="50"
                        Padding="10" Margin="10">
                            <StackPanel Orientation="Horizontal" >
                                <CheckBox Style="{StaticResource CheckBoxWindow}"
                                  VerticalAlignment="Center"
                                  IsChecked="{Binding PlayScreenLocked}"
                                  IsEnabled="{Binding PlayScreenRunning}"/>
                                <TextBlock Text="Lock Playscreen" 
                                   Margin="5,0,0,0"
                                   Style="{StaticResource DefaultTextBlock}"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
            <Button Grid.Column="1" Content="Close app"
                    Command="{Binding CloseAppCommand}"
                    IsEnabled="{Binding PlayScreenRunning}"
                    Style="{StaticResource WindowButtons}"/>
        </Grid>
        <GroupBox Grid.Row="1"  x:Name="GamePhases"
                  Header="Game Phases" 
                  VerticalAlignment="Center" >
                    <StackPanel Orientation="Horizontal" IsEnabled="{Binding PlayScreenRunning}">
                <StackPanel.Resources>
                    <Style TargetType="RadioButton">
                        <Setter Property="Margin" Value="13,0,0,0"/>
                    </Style>
                </StackPanel.Resources>
                        <RadioButton GroupName="GamePhase" 
                                 Content="PreGame" 
                                 Command="{Binding ChangeGamePhaseCommand}"
                                 CommandParameter="{x:Static enums:GamePhaseEnum.PreGame}"
                                 IsChecked="True"/>
                        <RadioButton GroupName="GamePhase" 
                                 Content="Game Intro" 
                                 Command="{Binding ChangeGamePhaseCommand}"
                                 CommandParameter="{x:Static enums:GamePhaseEnum.GameIntro}"
                                 />
                        <RadioButton GroupName="GamePhase" 
                                 Content="1st round Intro" 
                                 Command="{Binding ChangeGamePhaseCommand}" 
                                 CommandParameter="{x:Static enums:GamePhaseEnum.FirstRoundIntro}"/>
                        <RadioButton GroupName="GamePhase" 
                                 Content="1st round" 
                                 Command="{Binding ChangeGamePhaseCommand}" 
                                 CommandParameter="{x:Static enums:GamePhaseEnum.FirstRound}"/>
                        <RadioButton GroupName="GamePhase" 
                                 Content="2nd round Intro" 
                                 Command="{Binding ChangeGamePhaseCommand}"
                                 CommandParameter="{x:Static enums:GamePhaseEnum.SecondRoundIntro}"/>
                        <RadioButton GroupName="GamePhase" 
                                 Content="2nd round" 
                                 Command="{Binding ChangeGamePhaseCommand}"
                                 CommandParameter="{x:Static enums:GamePhaseEnum.SecondRound}"/>
                        <RadioButton GroupName="GamePhase" 
                                 Content="3rd round Intro" 
                                 Command="{Binding ChangeGamePhaseCommand}"
                                 CommandParameter="{x:Static enums:GamePhaseEnum.ThirdRoundIntro}"/>
                        <RadioButton GroupName="GamePhase" 
                                     Content="3rd round" 
                                 Command="{Binding ChangeGamePhaseCommand}" 
                                 CommandParameter="{x:Static enums:GamePhaseEnum.ThirdRound}"/>
                        <RadioButton GroupName="GamePhase" 
                                 Content="Final round Intro" 
                                 Command="{Binding ChangeGamePhaseCommand}"
                                 CommandParameter="{x:Static enums:GamePhaseEnum.FinalRoundIntro}"/>
                        <RadioButton GroupName="GamePhase" 
                                 Content="Final round" 
                                 Command="{Binding ChangeGamePhaseCommand}"
                                 CommandParameter="{x:Static enums:GamePhaseEnum.FinalRound}"/>
                    </StackPanel>
                </GroupBox>
        <Grid Grid.Row="2" x:Name="PlayerControl">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                <Label Content="How to select player: " FontSize="20"/>
                <ComboBox VerticalAlignment="Center" HorizontalAlignment="Center"
                      MinWidth="100" FontSize="20"
                      SelectedIndex="{Binding AutoPlayerSelectionIndex, Mode=TwoWay}">
                    <ComboBoxItem Content="Auto (Buttons)" IsSelected="True" />
                    <ComboBoxItem Content="Manual (here in cockpit)" />
                </ComboBox>
            </StackPanel>
            <Grid Grid.Row="1" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Horizontal"  VerticalAlignment="Top" HorizontalAlignment="Center">
                        <StackPanel.Resources>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding AutoPlayerSelection, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding AutoPlayerSelection, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="MinWidth" Value="50"/>
                                <Setter Property="MaxWidth" Value="200"/>
                            </Style>
                        </StackPanel.Resources>
                        <ToggleButton Margin="5" Background="{Binding Players[0].ColorCode}" 
                              IsChecked="{Binding Players[0].isSelected, Mode=OneWay}"
                              Command="{Binding SelectPlayerCommand}"
                              CommandParameter="0">
                            <StackPanel>
                                <TextBlock Text="{Binding Players[0].Name}"/>
                                <TextBlock Text="{Binding Players[0].Score}"/>
                            </StackPanel>
                        </ToggleButton>

                        <ToggleButton Margin="5" Background="{Binding Players[1].ColorCode}" 
                              IsChecked="{Binding Players[1].isSelected, Mode=OneWay}" 
                              Command="{Binding SelectPlayerCommand}"
                              CommandParameter="1">
                            <StackPanel>
                                <TextBlock Text="{Binding Players[1].Name}"/>
                                <TextBlock Text="{Binding Players[1].Score}"/>
                            </StackPanel>
                        </ToggleButton>

                        <ToggleButton Margin="5" Background="{Binding Players[2].ColorCode}" 
                              IsChecked="{Binding Players[2].isSelected, Mode=OneWay}" 
                              Command="{Binding SelectPlayerCommand}"
                              CommandParameter="2">
                            <StackPanel>
                                <TextBlock Text="{Binding Players[2].Name}"/>
                                <TextBlock Text="{Binding Players[2].Score}"/>
                            </StackPanel>
                        </ToggleButton>

                        <ToggleButton Margin="5" Background="{Binding Players[3].ColorCode}" 
                              IsChecked="{Binding Players[3].isSelected, Mode=OneWay}" 
                              Command="{Binding SelectPlayerCommand}"
                              CommandParameter="3">
                            <StackPanel>
                                <TextBlock Text="{Binding Players[3].Name}"/>
                                <TextBlock Text="{Binding Players[3].Score}"/>
                            </StackPanel>
                        </ToggleButton>

                    </StackPanel>
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="2*"/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="ToggleButtonEditPlayersNames" Height="30" HorizontalAlignment="Center">
                            <ToggleButton.Resources>
                                <Style TargetType="ToggleButton">
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Content" Value="Edit Player's names"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Content" Value="Accept Player's names"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Resources>
                        </ToggleButton>
                        <Grid x:Name="EditPlayerNames" Grid.Row="1"
                              Visibility="{Binding ElementName=ToggleButtonEditPlayersNames, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}">
                            <Grid.Resources>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0" Grid.Column="0">
                                <Label Content="Red" HorizontalAlignment="Center"/>
                                <TextBox Text="{Binding Players[0].Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Width="100"/>
                            </StackPanel >
                            <StackPanel Grid.Row="0" Grid.Column="1">
                                <Label Content="Green" HorizontalAlignment="Center"/>
                                <TextBox Text="{Binding Players[1].Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Width="100"/>
                            </StackPanel>
                            <StackPanel Grid.Row="1" Grid.Column="0">
                                <Label Content="Blue" HorizontalAlignment="Center"/>
                                <TextBox Text="{Binding Players[2].Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Width="100"/>
                            </StackPanel>
                            <StackPanel Grid.Row="1" Grid.Column="1">
                                <Label Content="Yellow" HorizontalAlignment="Center"/>
                                <TextBox Text="{Binding Players[3].Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Width="100"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Grid>
                <StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center" 
                            IsEnabled="{Binding AutoPlayerSelection}">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style TargetType="Button">
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="Padding" Value="5"/>
                                <Setter Property="MinWidth" Value="100"/>
                            </Style>
                        </StackPanel.Resources>

                        <GroupBox Header="Connetion">
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Button Server address"/>
                                    <TextBox Text="{Binding ButtonServerAddress}" Width="100"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Button Content="Connect" Command="{Binding ConnectButtonsServerCommand}"/>
                                    <Button Content="Disconnect" Command="{Binding DisconnectButtonsServerCommand}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Connection Status:"/>
                                    <TextBlock Text="{Binding ButtonsConnectionStatus}"
                                               VerticalAlignment="Center"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>

                        <Button Content="Next" Command="{Binding RequestNextPlayerCommand}"/>
                        <Button Content="Reset" Command="{Binding ResetButtonsStateCommand}"/>
                        <Button Content="Ready to collect answers" Command="{Binding SetReadyForAnswersCommand}"/>

                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Button message: "/>
                        <TextBox Text="{Binding ButtonsMessageText, UpdateSourceTrigger=LostFocus}"
                                 MinWidth="200" VerticalAlignment="Center"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label Content="Selected Player: "/>

                        <TextBlock Text="{Binding SelectedPlayerIndex}"
                                   VerticalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel>
                        <ListView ItemsSource="{Binding WsLogOC}" Height="75" SelectedIndex="{Binding WsLogSelectedIndex, Mode=OneWay}" SelectionChanged="ListView_SelectionChanged">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" FontSize="12"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListView>
                        <Button Content="Clear log" 
                                HorizontalAlignment="Center"
                                MinWidth="150"
                                Command="{Binding ClearWsLogCommand}"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
        

    </Grid>
        <Grid Grid.Row="3" Name="QuestionsControl">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <Viewbox   Width="auto" VerticalAlignment="Top">
                <DataGrid Grid.Column="0" 
                          ItemsSource="{Binding CurrentRoundQuestions, UpdateSourceTrigger=PropertyChanged}"
                          CanUserAddRows="False"
                          HeadersVisibility="None"
                          AutoGenerateColumns="False"
                          Visibility="{Binding QuestionsArePrepared,Converter={StaticResource BoolToVisibilityConverter}}"
                          >
                    <DataGrid.Resources>
                        <Style TargetType="DataGrid">
                            <Setter Property="IsEnabled" Value="False"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding GamePhase, Converter={StaticResource boolParameterConverter}, ConverterParameter={x:Static enums:GamePhaseEnum.FirstRound}}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding GamePhase, Converter={StaticResource boolParameterConverter}, ConverterParameter={x:Static enums:GamePhaseEnum.SecondRound}}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding GamePhase, Converter={StaticResource boolParameterConverter}, ConverterParameter={x:Static enums:GamePhaseEnum.ThirdRound}}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"></Setter>
                                </DataTrigger>


                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}"/>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="{Binding Questions[0].Price}"                                            
                                            Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window},Path=DataContext.OpenQuestionCommand}"
                                            CommandParameter="{Binding Questions[0]}" 
                                            Foreground="{Binding Questions[0].SpecialityType,Converter={StaticResource specialityColorConverter}}">
                                        <Button.Resources>
                                            <Style TargetType="Button">
                                                <Setter Property="Background" Value="gray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Questions[0].NotYetAsked}" Value="False">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Resources>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="{Binding Questions[1].Price}"
                                            Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window},Path=DataContext.OpenQuestionCommand}"
                                            CommandParameter="{Binding Questions[1]}"
                                            Foreground="{Binding Questions[1].SpecialityType,Converter={StaticResource specialityColorConverter}}">
                                        <Button.Resources>
                                            <Style TargetType="Button">
                                                <Setter Property="Background" Value="gray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Questions[1].NotYetAsked}" Value="False">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Resources>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="{Binding Questions[2].Price}"
                                            Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window},Path=DataContext.OpenQuestionCommand}"
                                            CommandParameter="{Binding Questions[2]}"
                                            Foreground="{Binding Questions[2].SpecialityType,Converter={StaticResource specialityColorConverter}}"
                                            >
                                        <Button.Resources>
                                            <Style TargetType="Button">
                                                <Setter Property="Background" Value="gray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Questions[2].NotYetAsked}" Value="False">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                    </DataTrigger>

                                                </Style.Triggers>
                                            </Style>
                                        </Button.Resources>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="{Binding Questions[3].Price}"
                                            Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window},Path=DataContext.OpenQuestionCommand}"
                                            CommandParameter="{Binding Questions[3]}"
                                            Foreground="{Binding Questions[3].SpecialityType,Converter={StaticResource specialityColorConverter}}">
                                        <Button.Resources>
                                            <Style TargetType="Button">
                                                <Setter Property="Background" Value="gray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Questions[3].NotYetAsked}" Value="False">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                    </DataTrigger>

                                                </Style.Triggers>
                                            </Style>
                                        </Button.Resources>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="{Binding Questions[4].Price}"
                                            Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window},Path=DataContext.OpenQuestionCommand}"
                                            CommandParameter="{Binding Questions[4]}"
                                            Foreground="{Binding Questions[4].SpecialityType,Converter={StaticResource specialityColorConverter}}"
                                            >
                                        <Button.Resources>
                                            <Style TargetType="Button">

                                                <Setter Property="Background" Value="gray"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Questions[4].NotYetAsked}" Value="False">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Resources>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                </DataGrid>
            </Viewbox>
            <Grid x:Name="CurrentQuestionControl" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <GroupBox Grid.Row="0" Header="Current question"
                          MinHeight="100"
                          BorderThickness="2">
                    <Grid x:Name="CurrentQuestionInfo" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="2*"></RowDefinition>
                            <RowDefinition Height="1*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal"  Margin="0">
                            <StackPanel.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="{Binding GamePhase, Converter={StaticResource visibilityParameterConverter}, ConverterParameter={x:Static enums:GamePhaseEnum.Question}}"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="TextWrapping" Value="Wrap"/>
                                    <Setter Property="MinWidth" Value="150"/>
                                </Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Margin" Value="10,0,0,0"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="MinWidth" Value="100"/>
                                </Style>
                                <Style TargetType="Label">
                                    <Setter Property="Margin" Value="10,0,0,0"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Style>

                            </StackPanel.Resources>

                            <StackPanel Grid.Row="1" Orientation="Horizontal"  Margin="0">
                                <Label Content="Topic: " Margin="0"/>
                                <TextBlock Text="{Binding CurrentQuestion.TopicName}"/>
                            </StackPanel>

                            <StackPanel Grid.Row="0" Orientation="Horizontal" >
                                <Label Content="Price: " />
                                <TextBlock Text="{Binding CurrentQuestion.Price}"/>
                            </StackPanel>

                            <StackPanel Grid.Row="4" Orientation="Horizontal">
                                <Label Content="Speciality Type: "  />
                                <TextBlock Text="{Binding CurrentQuestion.SpecialityType}"/>
                            </StackPanel>
                            
                            <StackPanel Grid.Row="5" Orientation="Horizontal">
                                <Label Content="SpecialityCatPrice: "  />
                                <TextBlock Text="{Binding CurrentQuestion.SpecialityCatPrice}"/>
                            </StackPanel>

                        </StackPanel>
                       

                        <Grid Grid.Row="1" Name="CurrentQuestionText">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="CornerRadius" Value="2"/>
                                    <Setter Property="Padding" Value="3"/>
                                </Style>
                            </Grid.Resources>
                            <Label Grid.Row="0" Content="Text: " FontWeight="Bold" />
                            <Border Grid.Row="1"  >
                                <TextBlock  Text="{Binding CurrentQuestion.QuestionText}" MinHeight="50" TextWrapping="WrapWithOverflow"/>
                            </Border>
                            <Label Grid.Row="2" Content="Answer: " FontWeight="Bold" />
                            <Border Grid.Row="3">
                                <TextBlock Text="{Binding CurrentQuestion.QuestionAnswer}" MinHeight="20" TextWrapping="WrapWithOverflow"/>
                            </Border>

                        </Grid>



                    </Grid>
                </GroupBox>                
                <Grid x:Name="QuestionsActiveControl" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>                    
                        <GroupBox Header="Standard control" Grid.Row="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Margin="10" Grid.Column="0">
                                    <TextBox Text="{Binding ScoreBoardText}" FontSize="20" Margin="0 10"/>
                                    <StackPanel Orientation="Horizontal" IsEnabled="{Binding IsAvailableForScoreChange}">
                                        <Button Content="+" 
                                                Command="{Binding ChangePlayerScoreCommand}" 
                                                CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content}" 
                                                MinWidth="100" Padding="5"
                                                FontSize="20" FontWeight="Bold"/>
                                        <Button Content="-" 
                                                Command="{Binding ChangePlayerScoreCommand}" 
                                                CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content}" 
                                                MinWidth="100" Padding="5"
                                                FontSize="20" FontWeight="Bold"/>
                                    </StackPanel>
                                    <CheckBox Content="AutoClose on + answer" 
                                  IsChecked="{Binding AutoCloseuestionOnPositiveAnswer, Mode=TwoWay}"
                                  Margin="0 10"/>

                                </StackPanel>
                                <Grid Grid.Column="1" VerticalAlignment="Center">
                                    <Grid x:Name="MainQuestionControl" Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="1*"/>
                                        </Grid.ColumnDefinitions>

                                        <Button Content="Close Question" Grid.Column="0"
                                            Command="{Binding ChangeGamePhaseCommand}" 
                                            CommandParameter="{Binding ActualRoundGamePhase, UpdateSourceTrigger=PropertyChanged}"
                                            MinWidth="150" MinHeight="50"
                                            Margin="10" Padding="10"
                                            IsEnabled="{Binding GamePhase, Converter={StaticResource boolParameterConverter}, ConverterParameter={x:Static enums:GamePhaseEnum.Question}}"/>
                                    <Button Content="CloseIntro" Grid.Column="1"
                                            Command="{Binding CloseSpecialIntroCommand}"
                                            Margin="10" Padding="10"
                                            MinWidth="150" MinHeight="50">
                                        <Button.Resources>
                                            <Style TargetType="Button">
                                                <Setter Property="IsEnabled" Value="False"/>
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding CurrentQuestion.IsSpecial}" Value="True"/>
                                                            <Condition Binding="{Binding CurrentQuestion.SpecialIntroWasNotPlayed}" Value="True"/>
                                                            <Condition Binding="{Binding IsQuestion}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Resources>

                                    </Button>

                                </Grid>

                                </Grid>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Speciality stuff" Grid.Row="1">
                            <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <GroupBox Header="Picture" IsEnabled="{Binding IsPictureQuestion}">
                                <GroupBox.Resources>
                                    <Style TargetType="GroupBox">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="True">
                                                <Setter Property="Opacity" Value="1"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.4"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </GroupBox.Resources>
                                <StackPanel>
                                    <RadioButton GroupName="Picture" 
                                                 Content="Show Question" 
                                                 Command="{Binding ShowPictureInQustionCommand}"
                                                 CommandParameter="{x:Static sharedEntities:MultimediaForEnum.Question}"
                                                 IsChecked="True"/>
                                    <RadioButton GroupName="Picture" 
                                                 Content="Show Answer" 
                                                 Command="{Binding ShowPictureInQustionCommand}"
                                                 CommandParameter="{x:Static sharedEntities:MultimediaForEnum.Answer}"
                                                 />
                                </StackPanel>
 
                            </GroupBox>
                                
                            </Grid>     
                            
                        </GroupBox>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
